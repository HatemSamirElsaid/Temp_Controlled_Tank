
Temp_Controlled_Tank.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000097a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000008e8  00000000  00000000  000009d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000095a  00000000  00000000  000012b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 b6 04 	call	0x96c	; 0x96c <main>
  64:	0c 94 bb 04 	jmp	0x976	; 0x976 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SET_PIN>:
#include "Dio.h"

void DIO_SET_PIN(Port_ID port,Pin_ID pin){  //if Pin configured as an output
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_SET_PIN+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_SET_PIN+0x8>
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	89 83       	std	Y+1, r24	; 0x01
  7a:	6a 83       	std	Y+2, r22	; 0x02
	switch (port){
  7c:	89 81       	ldd	r24, Y+1	; 0x01
  7e:	28 2f       	mov	r18, r24
  80:	30 e0       	ldi	r19, 0x00	; 0
  82:	3c 83       	std	Y+4, r19	; 0x04
  84:	2b 83       	std	Y+3, r18	; 0x03
  86:	8b 81       	ldd	r24, Y+3	; 0x03
  88:	9c 81       	ldd	r25, Y+4	; 0x04
  8a:	81 30       	cpi	r24, 0x01	; 1
  8c:	91 05       	cpc	r25, r1
  8e:	49 f1       	breq	.+82     	; 0xe2 <DIO_SET_PIN+0x76>
  90:	2b 81       	ldd	r18, Y+3	; 0x03
  92:	3c 81       	ldd	r19, Y+4	; 0x04
  94:	22 30       	cpi	r18, 0x02	; 2
  96:	31 05       	cpc	r19, r1
  98:	2c f4       	brge	.+10     	; 0xa4 <DIO_SET_PIN+0x38>
  9a:	8b 81       	ldd	r24, Y+3	; 0x03
  9c:	9c 81       	ldd	r25, Y+4	; 0x04
  9e:	00 97       	sbiw	r24, 0x00	; 0
  a0:	61 f0       	breq	.+24     	; 0xba <DIO_SET_PIN+0x4e>
  a2:	5a c0       	rjmp	.+180    	; 0x158 <DIO_SET_PIN+0xec>
  a4:	2b 81       	ldd	r18, Y+3	; 0x03
  a6:	3c 81       	ldd	r19, Y+4	; 0x04
  a8:	22 30       	cpi	r18, 0x02	; 2
  aa:	31 05       	cpc	r19, r1
  ac:	71 f1       	breq	.+92     	; 0x10a <DIO_SET_PIN+0x9e>
  ae:	8b 81       	ldd	r24, Y+3	; 0x03
  b0:	9c 81       	ldd	r25, Y+4	; 0x04
  b2:	83 30       	cpi	r24, 0x03	; 3
  b4:	91 05       	cpc	r25, r1
  b6:	e9 f1       	breq	.+122    	; 0x132 <DIO_SET_PIN+0xc6>
  b8:	4f c0       	rjmp	.+158    	; 0x158 <DIO_SET_PIN+0xec>
	case DIO_PORTA:
		SET_BIT(PORTA_REG,pin);
  ba:	ab e3       	ldi	r26, 0x3B	; 59
  bc:	b0 e0       	ldi	r27, 0x00	; 0
  be:	eb e3       	ldi	r30, 0x3B	; 59
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	48 2f       	mov	r20, r24
  c6:	8a 81       	ldd	r24, Y+2	; 0x02
  c8:	28 2f       	mov	r18, r24
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	02 2e       	mov	r0, r18
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <DIO_SET_PIN+0x6c>
  d4:	88 0f       	add	r24, r24
  d6:	99 1f       	adc	r25, r25
  d8:	0a 94       	dec	r0
  da:	e2 f7       	brpl	.-8      	; 0xd4 <DIO_SET_PIN+0x68>
  dc:	84 2b       	or	r24, r20
  de:	8c 93       	st	X, r24
  e0:	3b c0       	rjmp	.+118    	; 0x158 <DIO_SET_PIN+0xec>
		break;
	case DIO_PORTB:
		SET_BIT(PORTB_REG,pin);
  e2:	a8 e3       	ldi	r26, 0x38	; 56
  e4:	b0 e0       	ldi	r27, 0x00	; 0
  e6:	e8 e3       	ldi	r30, 0x38	; 56
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	48 2f       	mov	r20, r24
  ee:	8a 81       	ldd	r24, Y+2	; 0x02
  f0:	28 2f       	mov	r18, r24
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 2e       	mov	r0, r18
  fa:	02 c0       	rjmp	.+4      	; 0x100 <DIO_SET_PIN+0x94>
  fc:	88 0f       	add	r24, r24
  fe:	99 1f       	adc	r25, r25
 100:	0a 94       	dec	r0
 102:	e2 f7       	brpl	.-8      	; 0xfc <DIO_SET_PIN+0x90>
 104:	84 2b       	or	r24, r20
 106:	8c 93       	st	X, r24
 108:	27 c0       	rjmp	.+78     	; 0x158 <DIO_SET_PIN+0xec>
		break;
	case DIO_PORTC:
		SET_BIT(PORTC_REG,pin);
 10a:	a5 e3       	ldi	r26, 0x35	; 53
 10c:	b0 e0       	ldi	r27, 0x00	; 0
 10e:	e5 e3       	ldi	r30, 0x35	; 53
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	48 2f       	mov	r20, r24
 116:	8a 81       	ldd	r24, Y+2	; 0x02
 118:	28 2f       	mov	r18, r24
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 2e       	mov	r0, r18
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_SET_PIN+0xbc>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	0a 94       	dec	r0
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_SET_PIN+0xb8>
 12c:	84 2b       	or	r24, r20
 12e:	8c 93       	st	X, r24
 130:	13 c0       	rjmp	.+38     	; 0x158 <DIO_SET_PIN+0xec>
		break;
	case DIO_PORTD:
		SET_BIT(PORTD_REG,pin);
 132:	a2 e3       	ldi	r26, 0x32	; 50
 134:	b0 e0       	ldi	r27, 0x00	; 0
 136:	e2 e3       	ldi	r30, 0x32	; 50
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	48 2f       	mov	r20, r24
 13e:	8a 81       	ldd	r24, Y+2	; 0x02
 140:	28 2f       	mov	r18, r24
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	02 2e       	mov	r0, r18
 14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_SET_PIN+0xe4>
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	0a 94       	dec	r0
 152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_SET_PIN+0xe0>
 154:	84 2b       	or	r24, r20
 156:	8c 93       	st	X, r24
		break;
	}
}
 158:	0f 90       	pop	r0
 15a:	0f 90       	pop	r0
 15c:	0f 90       	pop	r0
 15e:	0f 90       	pop	r0
 160:	cf 91       	pop	r28
 162:	df 91       	pop	r29
 164:	08 95       	ret

00000166 <DIO_CLEAR_PIN>:
//--------------------------------------------------------------------------------------------------
void DIO_CLEAR_PIN(Port_ID port,Pin_ID pin){  //if Pin configured as an output
 166:	df 93       	push	r29
 168:	cf 93       	push	r28
 16a:	00 d0       	rcall	.+0      	; 0x16c <DIO_CLEAR_PIN+0x6>
 16c:	00 d0       	rcall	.+0      	; 0x16e <DIO_CLEAR_PIN+0x8>
 16e:	cd b7       	in	r28, 0x3d	; 61
 170:	de b7       	in	r29, 0x3e	; 62
 172:	89 83       	std	Y+1, r24	; 0x01
 174:	6a 83       	std	Y+2, r22	; 0x02
	switch (port){
 176:	89 81       	ldd	r24, Y+1	; 0x01
 178:	28 2f       	mov	r18, r24
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	3c 83       	std	Y+4, r19	; 0x04
 17e:	2b 83       	std	Y+3, r18	; 0x03
 180:	8b 81       	ldd	r24, Y+3	; 0x03
 182:	9c 81       	ldd	r25, Y+4	; 0x04
 184:	81 30       	cpi	r24, 0x01	; 1
 186:	91 05       	cpc	r25, r1
 188:	59 f1       	breq	.+86     	; 0x1e0 <DIO_CLEAR_PIN+0x7a>
 18a:	2b 81       	ldd	r18, Y+3	; 0x03
 18c:	3c 81       	ldd	r19, Y+4	; 0x04
 18e:	22 30       	cpi	r18, 0x02	; 2
 190:	31 05       	cpc	r19, r1
 192:	2c f4       	brge	.+10     	; 0x19e <DIO_CLEAR_PIN+0x38>
 194:	8b 81       	ldd	r24, Y+3	; 0x03
 196:	9c 81       	ldd	r25, Y+4	; 0x04
 198:	00 97       	sbiw	r24, 0x00	; 0
 19a:	69 f0       	breq	.+26     	; 0x1b6 <DIO_CLEAR_PIN+0x50>
 19c:	5f c0       	rjmp	.+190    	; 0x25c <DIO_CLEAR_PIN+0xf6>
 19e:	2b 81       	ldd	r18, Y+3	; 0x03
 1a0:	3c 81       	ldd	r19, Y+4	; 0x04
 1a2:	22 30       	cpi	r18, 0x02	; 2
 1a4:	31 05       	cpc	r19, r1
 1a6:	89 f1       	breq	.+98     	; 0x20a <DIO_CLEAR_PIN+0xa4>
 1a8:	8b 81       	ldd	r24, Y+3	; 0x03
 1aa:	9c 81       	ldd	r25, Y+4	; 0x04
 1ac:	83 30       	cpi	r24, 0x03	; 3
 1ae:	91 05       	cpc	r25, r1
 1b0:	09 f4       	brne	.+2      	; 0x1b4 <DIO_CLEAR_PIN+0x4e>
 1b2:	40 c0       	rjmp	.+128    	; 0x234 <DIO_CLEAR_PIN+0xce>
 1b4:	53 c0       	rjmp	.+166    	; 0x25c <DIO_CLEAR_PIN+0xf6>
	case DIO_PORTA:
		CLR_BIT(PORTA_REG,pin);
 1b6:	ab e3       	ldi	r26, 0x3B	; 59
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	eb e3       	ldi	r30, 0x3B	; 59
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	48 2f       	mov	r20, r24
 1c2:	8a 81       	ldd	r24, Y+2	; 0x02
 1c4:	28 2f       	mov	r18, r24
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 2e       	mov	r0, r18
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_CLEAR_PIN+0x6e>
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	0a 94       	dec	r0
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_CLEAR_PIN+0x6a>
 1d8:	80 95       	com	r24
 1da:	84 23       	and	r24, r20
 1dc:	8c 93       	st	X, r24
 1de:	3e c0       	rjmp	.+124    	; 0x25c <DIO_CLEAR_PIN+0xf6>
		break;
	case DIO_PORTB:
		CLR_BIT(PORTB_REG,pin);
 1e0:	a8 e3       	ldi	r26, 0x38	; 56
 1e2:	b0 e0       	ldi	r27, 0x00	; 0
 1e4:	e8 e3       	ldi	r30, 0x38	; 56
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	48 2f       	mov	r20, r24
 1ec:	8a 81       	ldd	r24, Y+2	; 0x02
 1ee:	28 2f       	mov	r18, r24
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	02 2e       	mov	r0, r18
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <DIO_CLEAR_PIN+0x98>
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	0a 94       	dec	r0
 200:	e2 f7       	brpl	.-8      	; 0x1fa <DIO_CLEAR_PIN+0x94>
 202:	80 95       	com	r24
 204:	84 23       	and	r24, r20
 206:	8c 93       	st	X, r24
 208:	29 c0       	rjmp	.+82     	; 0x25c <DIO_CLEAR_PIN+0xf6>
		break;
	case DIO_PORTC:
		CLR_BIT(PORTC_REG,pin);
 20a:	a5 e3       	ldi	r26, 0x35	; 53
 20c:	b0 e0       	ldi	r27, 0x00	; 0
 20e:	e5 e3       	ldi	r30, 0x35	; 53
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	80 81       	ld	r24, Z
 214:	48 2f       	mov	r20, r24
 216:	8a 81       	ldd	r24, Y+2	; 0x02
 218:	28 2f       	mov	r18, r24
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	02 2e       	mov	r0, r18
 222:	02 c0       	rjmp	.+4      	; 0x228 <DIO_CLEAR_PIN+0xc2>
 224:	88 0f       	add	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	0a 94       	dec	r0
 22a:	e2 f7       	brpl	.-8      	; 0x224 <DIO_CLEAR_PIN+0xbe>
 22c:	80 95       	com	r24
 22e:	84 23       	and	r24, r20
 230:	8c 93       	st	X, r24
 232:	14 c0       	rjmp	.+40     	; 0x25c <DIO_CLEAR_PIN+0xf6>
		break;
	case DIO_PORTD:
		CLR_BIT(PORTD_REG,pin);
 234:	a2 e3       	ldi	r26, 0x32	; 50
 236:	b0 e0       	ldi	r27, 0x00	; 0
 238:	e2 e3       	ldi	r30, 0x32	; 50
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	80 81       	ld	r24, Z
 23e:	48 2f       	mov	r20, r24
 240:	8a 81       	ldd	r24, Y+2	; 0x02
 242:	28 2f       	mov	r18, r24
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	02 2e       	mov	r0, r18
 24c:	02 c0       	rjmp	.+4      	; 0x252 <DIO_CLEAR_PIN+0xec>
 24e:	88 0f       	add	r24, r24
 250:	99 1f       	adc	r25, r25
 252:	0a 94       	dec	r0
 254:	e2 f7       	brpl	.-8      	; 0x24e <DIO_CLEAR_PIN+0xe8>
 256:	80 95       	com	r24
 258:	84 23       	and	r24, r20
 25a:	8c 93       	st	X, r24
		break;
	}
}
 25c:	0f 90       	pop	r0
 25e:	0f 90       	pop	r0
 260:	0f 90       	pop	r0
 262:	0f 90       	pop	r0
 264:	cf 91       	pop	r28
 266:	df 91       	pop	r29
 268:	08 95       	ret

0000026a <DIO_TOGGLE_PIN>:
//--------------------------------------------------------------------------------------------------
void DIO_TOGGLE_PIN(Port_ID port,Pin_ID pin){  //if Pin configured as an output
 26a:	df 93       	push	r29
 26c:	cf 93       	push	r28
 26e:	00 d0       	rcall	.+0      	; 0x270 <DIO_TOGGLE_PIN+0x6>
 270:	00 d0       	rcall	.+0      	; 0x272 <DIO_TOGGLE_PIN+0x8>
 272:	cd b7       	in	r28, 0x3d	; 61
 274:	de b7       	in	r29, 0x3e	; 62
 276:	89 83       	std	Y+1, r24	; 0x01
 278:	6a 83       	std	Y+2, r22	; 0x02
	switch (port){
 27a:	89 81       	ldd	r24, Y+1	; 0x01
 27c:	28 2f       	mov	r18, r24
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	3c 83       	std	Y+4, r19	; 0x04
 282:	2b 83       	std	Y+3, r18	; 0x03
 284:	8b 81       	ldd	r24, Y+3	; 0x03
 286:	9c 81       	ldd	r25, Y+4	; 0x04
 288:	81 30       	cpi	r24, 0x01	; 1
 28a:	91 05       	cpc	r25, r1
 28c:	49 f1       	breq	.+82     	; 0x2e0 <DIO_TOGGLE_PIN+0x76>
 28e:	2b 81       	ldd	r18, Y+3	; 0x03
 290:	3c 81       	ldd	r19, Y+4	; 0x04
 292:	22 30       	cpi	r18, 0x02	; 2
 294:	31 05       	cpc	r19, r1
 296:	2c f4       	brge	.+10     	; 0x2a2 <DIO_TOGGLE_PIN+0x38>
 298:	8b 81       	ldd	r24, Y+3	; 0x03
 29a:	9c 81       	ldd	r25, Y+4	; 0x04
 29c:	00 97       	sbiw	r24, 0x00	; 0
 29e:	61 f0       	breq	.+24     	; 0x2b8 <DIO_TOGGLE_PIN+0x4e>
 2a0:	5a c0       	rjmp	.+180    	; 0x356 <DIO_TOGGLE_PIN+0xec>
 2a2:	2b 81       	ldd	r18, Y+3	; 0x03
 2a4:	3c 81       	ldd	r19, Y+4	; 0x04
 2a6:	22 30       	cpi	r18, 0x02	; 2
 2a8:	31 05       	cpc	r19, r1
 2aa:	71 f1       	breq	.+92     	; 0x308 <DIO_TOGGLE_PIN+0x9e>
 2ac:	8b 81       	ldd	r24, Y+3	; 0x03
 2ae:	9c 81       	ldd	r25, Y+4	; 0x04
 2b0:	83 30       	cpi	r24, 0x03	; 3
 2b2:	91 05       	cpc	r25, r1
 2b4:	e9 f1       	breq	.+122    	; 0x330 <DIO_TOGGLE_PIN+0xc6>
 2b6:	4f c0       	rjmp	.+158    	; 0x356 <DIO_TOGGLE_PIN+0xec>
	case DIO_PORTA:
		TOGGLE_BIT(PORTA_REG,pin);
 2b8:	ab e3       	ldi	r26, 0x3B	; 59
 2ba:	b0 e0       	ldi	r27, 0x00	; 0
 2bc:	eb e3       	ldi	r30, 0x3B	; 59
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	80 81       	ld	r24, Z
 2c2:	48 2f       	mov	r20, r24
 2c4:	8a 81       	ldd	r24, Y+2	; 0x02
 2c6:	28 2f       	mov	r18, r24
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	02 2e       	mov	r0, r18
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_TOGGLE_PIN+0x6c>
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	0a 94       	dec	r0
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_TOGGLE_PIN+0x68>
 2da:	84 27       	eor	r24, r20
 2dc:	8c 93       	st	X, r24
 2de:	3b c0       	rjmp	.+118    	; 0x356 <DIO_TOGGLE_PIN+0xec>
		break;
	case DIO_PORTB:
		TOGGLE_BIT(PORTB_REG,pin);
 2e0:	a8 e3       	ldi	r26, 0x38	; 56
 2e2:	b0 e0       	ldi	r27, 0x00	; 0
 2e4:	e8 e3       	ldi	r30, 0x38	; 56
 2e6:	f0 e0       	ldi	r31, 0x00	; 0
 2e8:	80 81       	ld	r24, Z
 2ea:	48 2f       	mov	r20, r24
 2ec:	8a 81       	ldd	r24, Y+2	; 0x02
 2ee:	28 2f       	mov	r18, r24
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	02 2e       	mov	r0, r18
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <DIO_TOGGLE_PIN+0x94>
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	0a 94       	dec	r0
 300:	e2 f7       	brpl	.-8      	; 0x2fa <DIO_TOGGLE_PIN+0x90>
 302:	84 27       	eor	r24, r20
 304:	8c 93       	st	X, r24
 306:	27 c0       	rjmp	.+78     	; 0x356 <DIO_TOGGLE_PIN+0xec>
		break;
	case DIO_PORTC:
		TOGGLE_BIT(PORTC_REG,pin);
 308:	a5 e3       	ldi	r26, 0x35	; 53
 30a:	b0 e0       	ldi	r27, 0x00	; 0
 30c:	e5 e3       	ldi	r30, 0x35	; 53
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	80 81       	ld	r24, Z
 312:	48 2f       	mov	r20, r24
 314:	8a 81       	ldd	r24, Y+2	; 0x02
 316:	28 2f       	mov	r18, r24
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	02 2e       	mov	r0, r18
 320:	02 c0       	rjmp	.+4      	; 0x326 <DIO_TOGGLE_PIN+0xbc>
 322:	88 0f       	add	r24, r24
 324:	99 1f       	adc	r25, r25
 326:	0a 94       	dec	r0
 328:	e2 f7       	brpl	.-8      	; 0x322 <DIO_TOGGLE_PIN+0xb8>
 32a:	84 27       	eor	r24, r20
 32c:	8c 93       	st	X, r24
 32e:	13 c0       	rjmp	.+38     	; 0x356 <DIO_TOGGLE_PIN+0xec>
		break;
	case DIO_PORTD:
		TOGGLE_BIT(PORTD_REG,pin);
 330:	a2 e3       	ldi	r26, 0x32	; 50
 332:	b0 e0       	ldi	r27, 0x00	; 0
 334:	e2 e3       	ldi	r30, 0x32	; 50
 336:	f0 e0       	ldi	r31, 0x00	; 0
 338:	80 81       	ld	r24, Z
 33a:	48 2f       	mov	r20, r24
 33c:	8a 81       	ldd	r24, Y+2	; 0x02
 33e:	28 2f       	mov	r18, r24
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	02 2e       	mov	r0, r18
 348:	02 c0       	rjmp	.+4      	; 0x34e <DIO_TOGGLE_PIN+0xe4>
 34a:	88 0f       	add	r24, r24
 34c:	99 1f       	adc	r25, r25
 34e:	0a 94       	dec	r0
 350:	e2 f7       	brpl	.-8      	; 0x34a <DIO_TOGGLE_PIN+0xe0>
 352:	84 27       	eor	r24, r20
 354:	8c 93       	st	X, r24
		break;
	}
}
 356:	0f 90       	pop	r0
 358:	0f 90       	pop	r0
 35a:	0f 90       	pop	r0
 35c:	0f 90       	pop	r0
 35e:	cf 91       	pop	r28
 360:	df 91       	pop	r29
 362:	08 95       	ret

00000364 <DIO_ENABLE_PULLUP>:
//--------------------------------------------------------------------------------------------------
void DIO_ENABLE_PULLUP(Port_ID port,Pin_ID pin){  //if Pin configured as an input
 364:	df 93       	push	r29
 366:	cf 93       	push	r28
 368:	00 d0       	rcall	.+0      	; 0x36a <DIO_ENABLE_PULLUP+0x6>
 36a:	00 d0       	rcall	.+0      	; 0x36c <DIO_ENABLE_PULLUP+0x8>
 36c:	cd b7       	in	r28, 0x3d	; 61
 36e:	de b7       	in	r29, 0x3e	; 62
 370:	89 83       	std	Y+1, r24	; 0x01
 372:	6a 83       	std	Y+2, r22	; 0x02

	switch (port){
 374:	89 81       	ldd	r24, Y+1	; 0x01
 376:	28 2f       	mov	r18, r24
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	3c 83       	std	Y+4, r19	; 0x04
 37c:	2b 83       	std	Y+3, r18	; 0x03
 37e:	4b 81       	ldd	r20, Y+3	; 0x03
 380:	5c 81       	ldd	r21, Y+4	; 0x04
 382:	41 30       	cpi	r20, 0x01	; 1
 384:	51 05       	cpc	r21, r1
 386:	09 f4       	brne	.+2      	; 0x38a <DIO_ENABLE_PULLUP+0x26>
 388:	40 c0       	rjmp	.+128    	; 0x40a <DIO_ENABLE_PULLUP+0xa6>
 38a:	8b 81       	ldd	r24, Y+3	; 0x03
 38c:	9c 81       	ldd	r25, Y+4	; 0x04
 38e:	82 30       	cpi	r24, 0x02	; 2
 390:	91 05       	cpc	r25, r1
 392:	34 f4       	brge	.+12     	; 0x3a0 <DIO_ENABLE_PULLUP+0x3c>
 394:	2b 81       	ldd	r18, Y+3	; 0x03
 396:	3c 81       	ldd	r19, Y+4	; 0x04
 398:	21 15       	cp	r18, r1
 39a:	31 05       	cpc	r19, r1
 39c:	71 f0       	breq	.+28     	; 0x3ba <DIO_ENABLE_PULLUP+0x56>
 39e:	aa c0       	rjmp	.+340    	; 0x4f4 <__stack+0x95>
 3a0:	4b 81       	ldd	r20, Y+3	; 0x03
 3a2:	5c 81       	ldd	r21, Y+4	; 0x04
 3a4:	42 30       	cpi	r20, 0x02	; 2
 3a6:	51 05       	cpc	r21, r1
 3a8:	09 f4       	brne	.+2      	; 0x3ac <DIO_ENABLE_PULLUP+0x48>
 3aa:	57 c0       	rjmp	.+174    	; 0x45a <DIO_ENABLE_PULLUP+0xf6>
 3ac:	8b 81       	ldd	r24, Y+3	; 0x03
 3ae:	9c 81       	ldd	r25, Y+4	; 0x04
 3b0:	83 30       	cpi	r24, 0x03	; 3
 3b2:	91 05       	cpc	r25, r1
 3b4:	09 f4       	brne	.+2      	; 0x3b8 <DIO_ENABLE_PULLUP+0x54>
 3b6:	78 c0       	rjmp	.+240    	; 0x4a8 <__stack+0x49>
 3b8:	9d c0       	rjmp	.+314    	; 0x4f4 <__stack+0x95>
	case DIO_PORTA:
		if(CHK_BIT(DDRA_REG,pin)==0)
 3ba:	ea e3       	ldi	r30, 0x3A	; 58
 3bc:	f0 e0       	ldi	r31, 0x00	; 0
 3be:	80 81       	ld	r24, Z
 3c0:	28 2f       	mov	r18, r24
 3c2:	30 e0       	ldi	r19, 0x00	; 0
 3c4:	8a 81       	ldd	r24, Y+2	; 0x02
 3c6:	88 2f       	mov	r24, r24
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	a9 01       	movw	r20, r18
 3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <DIO_ENABLE_PULLUP+0x6e>
 3ce:	55 95       	asr	r21
 3d0:	47 95       	ror	r20
 3d2:	8a 95       	dec	r24
 3d4:	e2 f7       	brpl	.-8      	; 0x3ce <DIO_ENABLE_PULLUP+0x6a>
 3d6:	ca 01       	movw	r24, r20
 3d8:	81 70       	andi	r24, 0x01	; 1
 3da:	90 70       	andi	r25, 0x00	; 0
 3dc:	00 97       	sbiw	r24, 0x00	; 0
 3de:	09 f0       	breq	.+2      	; 0x3e2 <DIO_ENABLE_PULLUP+0x7e>
 3e0:	89 c0       	rjmp	.+274    	; 0x4f4 <__stack+0x95>
			SET_BIT(PORTA_REG,pin);
 3e2:	ab e3       	ldi	r26, 0x3B	; 59
 3e4:	b0 e0       	ldi	r27, 0x00	; 0
 3e6:	eb e3       	ldi	r30, 0x3B	; 59
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	80 81       	ld	r24, Z
 3ec:	48 2f       	mov	r20, r24
 3ee:	8a 81       	ldd	r24, Y+2	; 0x02
 3f0:	28 2f       	mov	r18, r24
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	02 2e       	mov	r0, r18
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <DIO_ENABLE_PULLUP+0x9c>
 3fc:	88 0f       	add	r24, r24
 3fe:	99 1f       	adc	r25, r25
 400:	0a 94       	dec	r0
 402:	e2 f7       	brpl	.-8      	; 0x3fc <DIO_ENABLE_PULLUP+0x98>
 404:	84 2b       	or	r24, r20
 406:	8c 93       	st	X, r24
 408:	75 c0       	rjmp	.+234    	; 0x4f4 <__stack+0x95>
		break;
	case DIO_PORTB:
		if(CHK_BIT(DDRB_REG,pin)==0)
 40a:	e7 e3       	ldi	r30, 0x37	; 55
 40c:	f0 e0       	ldi	r31, 0x00	; 0
 40e:	80 81       	ld	r24, Z
 410:	28 2f       	mov	r18, r24
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	8a 81       	ldd	r24, Y+2	; 0x02
 416:	88 2f       	mov	r24, r24
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	a9 01       	movw	r20, r18
 41c:	02 c0       	rjmp	.+4      	; 0x422 <DIO_ENABLE_PULLUP+0xbe>
 41e:	55 95       	asr	r21
 420:	47 95       	ror	r20
 422:	8a 95       	dec	r24
 424:	e2 f7       	brpl	.-8      	; 0x41e <DIO_ENABLE_PULLUP+0xba>
 426:	ca 01       	movw	r24, r20
 428:	81 70       	andi	r24, 0x01	; 1
 42a:	90 70       	andi	r25, 0x00	; 0
 42c:	00 97       	sbiw	r24, 0x00	; 0
 42e:	09 f0       	breq	.+2      	; 0x432 <DIO_ENABLE_PULLUP+0xce>
 430:	61 c0       	rjmp	.+194    	; 0x4f4 <__stack+0x95>
			SET_BIT(PORTB_REG,pin);
 432:	a8 e3       	ldi	r26, 0x38	; 56
 434:	b0 e0       	ldi	r27, 0x00	; 0
 436:	e8 e3       	ldi	r30, 0x38	; 56
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	80 81       	ld	r24, Z
 43c:	48 2f       	mov	r20, r24
 43e:	8a 81       	ldd	r24, Y+2	; 0x02
 440:	28 2f       	mov	r18, r24
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	02 2e       	mov	r0, r18
 44a:	02 c0       	rjmp	.+4      	; 0x450 <DIO_ENABLE_PULLUP+0xec>
 44c:	88 0f       	add	r24, r24
 44e:	99 1f       	adc	r25, r25
 450:	0a 94       	dec	r0
 452:	e2 f7       	brpl	.-8      	; 0x44c <DIO_ENABLE_PULLUP+0xe8>
 454:	84 2b       	or	r24, r20
 456:	8c 93       	st	X, r24
 458:	4d c0       	rjmp	.+154    	; 0x4f4 <__stack+0x95>
		break;
	case DIO_PORTC:
		if(CHK_BIT(DDRC_REG,pin)==0)
 45a:	e4 e3       	ldi	r30, 0x34	; 52
 45c:	f0 e0       	ldi	r31, 0x00	; 0
 45e:	80 81       	ld	r24, Z
 460:	28 2f       	mov	r18, r24
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	8a 81       	ldd	r24, Y+2	; 0x02
 466:	88 2f       	mov	r24, r24
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	a9 01       	movw	r20, r18
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__stack+0x13>
 46e:	55 95       	asr	r21
 470:	47 95       	ror	r20
 472:	8a 95       	dec	r24
 474:	e2 f7       	brpl	.-8      	; 0x46e <__stack+0xf>
 476:	ca 01       	movw	r24, r20
 478:	81 70       	andi	r24, 0x01	; 1
 47a:	90 70       	andi	r25, 0x00	; 0
 47c:	00 97       	sbiw	r24, 0x00	; 0
 47e:	d1 f5       	brne	.+116    	; 0x4f4 <__stack+0x95>
			SET_BIT(PORTC_REG,pin);
 480:	a5 e3       	ldi	r26, 0x35	; 53
 482:	b0 e0       	ldi	r27, 0x00	; 0
 484:	e5 e3       	ldi	r30, 0x35	; 53
 486:	f0 e0       	ldi	r31, 0x00	; 0
 488:	80 81       	ld	r24, Z
 48a:	48 2f       	mov	r20, r24
 48c:	8a 81       	ldd	r24, Y+2	; 0x02
 48e:	28 2f       	mov	r18, r24
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	81 e0       	ldi	r24, 0x01	; 1
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	02 2e       	mov	r0, r18
 498:	02 c0       	rjmp	.+4      	; 0x49e <__stack+0x3f>
 49a:	88 0f       	add	r24, r24
 49c:	99 1f       	adc	r25, r25
 49e:	0a 94       	dec	r0
 4a0:	e2 f7       	brpl	.-8      	; 0x49a <__stack+0x3b>
 4a2:	84 2b       	or	r24, r20
 4a4:	8c 93       	st	X, r24
 4a6:	26 c0       	rjmp	.+76     	; 0x4f4 <__stack+0x95>
		break;
	case DIO_PORTD:
		if(CHK_BIT(DDRD_REG,pin)==0)
 4a8:	e1 e3       	ldi	r30, 0x31	; 49
 4aa:	f0 e0       	ldi	r31, 0x00	; 0
 4ac:	80 81       	ld	r24, Z
 4ae:	28 2f       	mov	r18, r24
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	8a 81       	ldd	r24, Y+2	; 0x02
 4b4:	88 2f       	mov	r24, r24
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	a9 01       	movw	r20, r18
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <__stack+0x61>
 4bc:	55 95       	asr	r21
 4be:	47 95       	ror	r20
 4c0:	8a 95       	dec	r24
 4c2:	e2 f7       	brpl	.-8      	; 0x4bc <__stack+0x5d>
 4c4:	ca 01       	movw	r24, r20
 4c6:	81 70       	andi	r24, 0x01	; 1
 4c8:	90 70       	andi	r25, 0x00	; 0
 4ca:	00 97       	sbiw	r24, 0x00	; 0
 4cc:	99 f4       	brne	.+38     	; 0x4f4 <__stack+0x95>
			SET_BIT(PORTD_REG,pin);
 4ce:	a2 e3       	ldi	r26, 0x32	; 50
 4d0:	b0 e0       	ldi	r27, 0x00	; 0
 4d2:	e2 e3       	ldi	r30, 0x32	; 50
 4d4:	f0 e0       	ldi	r31, 0x00	; 0
 4d6:	80 81       	ld	r24, Z
 4d8:	48 2f       	mov	r20, r24
 4da:	8a 81       	ldd	r24, Y+2	; 0x02
 4dc:	28 2f       	mov	r18, r24
 4de:	30 e0       	ldi	r19, 0x00	; 0
 4e0:	81 e0       	ldi	r24, 0x01	; 1
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	02 2e       	mov	r0, r18
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <__stack+0x8d>
 4e8:	88 0f       	add	r24, r24
 4ea:	99 1f       	adc	r25, r25
 4ec:	0a 94       	dec	r0
 4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <__stack+0x89>
 4f0:	84 2b       	or	r24, r20
 4f2:	8c 93       	st	X, r24
		break;
	}
}
 4f4:	0f 90       	pop	r0
 4f6:	0f 90       	pop	r0
 4f8:	0f 90       	pop	r0
 4fa:	0f 90       	pop	r0
 4fc:	cf 91       	pop	r28
 4fe:	df 91       	pop	r29
 500:	08 95       	ret

00000502 <DIO_DISABLE_PULLUP>:
//--------------------------------------------------------------------------------------------------
void DIO_DISABLE_PULLUP(Port_ID port,Pin_ID pin){  //if Pin configured as an input
 502:	df 93       	push	r29
 504:	cf 93       	push	r28
 506:	00 d0       	rcall	.+0      	; 0x508 <DIO_DISABLE_PULLUP+0x6>
 508:	00 d0       	rcall	.+0      	; 0x50a <DIO_DISABLE_PULLUP+0x8>
 50a:	cd b7       	in	r28, 0x3d	; 61
 50c:	de b7       	in	r29, 0x3e	; 62
 50e:	89 83       	std	Y+1, r24	; 0x01
 510:	6a 83       	std	Y+2, r22	; 0x02

	switch (port){
 512:	89 81       	ldd	r24, Y+1	; 0x01
 514:	28 2f       	mov	r18, r24
 516:	30 e0       	ldi	r19, 0x00	; 0
 518:	3c 83       	std	Y+4, r19	; 0x04
 51a:	2b 83       	std	Y+3, r18	; 0x03
 51c:	4b 81       	ldd	r20, Y+3	; 0x03
 51e:	5c 81       	ldd	r21, Y+4	; 0x04
 520:	41 30       	cpi	r20, 0x01	; 1
 522:	51 05       	cpc	r21, r1
 524:	09 f4       	brne	.+2      	; 0x528 <DIO_DISABLE_PULLUP+0x26>
 526:	41 c0       	rjmp	.+130    	; 0x5aa <DIO_DISABLE_PULLUP+0xa8>
 528:	8b 81       	ldd	r24, Y+3	; 0x03
 52a:	9c 81       	ldd	r25, Y+4	; 0x04
 52c:	82 30       	cpi	r24, 0x02	; 2
 52e:	91 05       	cpc	r25, r1
 530:	34 f4       	brge	.+12     	; 0x53e <DIO_DISABLE_PULLUP+0x3c>
 532:	2b 81       	ldd	r18, Y+3	; 0x03
 534:	3c 81       	ldd	r19, Y+4	; 0x04
 536:	21 15       	cp	r18, r1
 538:	31 05       	cpc	r19, r1
 53a:	71 f0       	breq	.+28     	; 0x558 <DIO_DISABLE_PULLUP+0x56>
 53c:	ae c0       	rjmp	.+348    	; 0x69a <DIO_DISABLE_PULLUP+0x198>
 53e:	4b 81       	ldd	r20, Y+3	; 0x03
 540:	5c 81       	ldd	r21, Y+4	; 0x04
 542:	42 30       	cpi	r20, 0x02	; 2
 544:	51 05       	cpc	r21, r1
 546:	09 f4       	brne	.+2      	; 0x54a <DIO_DISABLE_PULLUP+0x48>
 548:	59 c0       	rjmp	.+178    	; 0x5fc <DIO_DISABLE_PULLUP+0xfa>
 54a:	8b 81       	ldd	r24, Y+3	; 0x03
 54c:	9c 81       	ldd	r25, Y+4	; 0x04
 54e:	83 30       	cpi	r24, 0x03	; 3
 550:	91 05       	cpc	r25, r1
 552:	09 f4       	brne	.+2      	; 0x556 <DIO_DISABLE_PULLUP+0x54>
 554:	7b c0       	rjmp	.+246    	; 0x64c <DIO_DISABLE_PULLUP+0x14a>
 556:	a1 c0       	rjmp	.+322    	; 0x69a <DIO_DISABLE_PULLUP+0x198>
	case DIO_PORTA:
		if(CHK_BIT(DDRA_REG,pin)==0)
 558:	ea e3       	ldi	r30, 0x3A	; 58
 55a:	f0 e0       	ldi	r31, 0x00	; 0
 55c:	80 81       	ld	r24, Z
 55e:	28 2f       	mov	r18, r24
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	8a 81       	ldd	r24, Y+2	; 0x02
 564:	88 2f       	mov	r24, r24
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	a9 01       	movw	r20, r18
 56a:	02 c0       	rjmp	.+4      	; 0x570 <DIO_DISABLE_PULLUP+0x6e>
 56c:	55 95       	asr	r21
 56e:	47 95       	ror	r20
 570:	8a 95       	dec	r24
 572:	e2 f7       	brpl	.-8      	; 0x56c <DIO_DISABLE_PULLUP+0x6a>
 574:	ca 01       	movw	r24, r20
 576:	81 70       	andi	r24, 0x01	; 1
 578:	90 70       	andi	r25, 0x00	; 0
 57a:	00 97       	sbiw	r24, 0x00	; 0
 57c:	09 f0       	breq	.+2      	; 0x580 <DIO_DISABLE_PULLUP+0x7e>
 57e:	8d c0       	rjmp	.+282    	; 0x69a <DIO_DISABLE_PULLUP+0x198>
			CLR_BIT(PORTA_REG,pin);
 580:	ab e3       	ldi	r26, 0x3B	; 59
 582:	b0 e0       	ldi	r27, 0x00	; 0
 584:	eb e3       	ldi	r30, 0x3B	; 59
 586:	f0 e0       	ldi	r31, 0x00	; 0
 588:	80 81       	ld	r24, Z
 58a:	48 2f       	mov	r20, r24
 58c:	8a 81       	ldd	r24, Y+2	; 0x02
 58e:	28 2f       	mov	r18, r24
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	81 e0       	ldi	r24, 0x01	; 1
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	02 2e       	mov	r0, r18
 598:	02 c0       	rjmp	.+4      	; 0x59e <DIO_DISABLE_PULLUP+0x9c>
 59a:	88 0f       	add	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	0a 94       	dec	r0
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <DIO_DISABLE_PULLUP+0x98>
 5a2:	80 95       	com	r24
 5a4:	84 23       	and	r24, r20
 5a6:	8c 93       	st	X, r24
 5a8:	78 c0       	rjmp	.+240    	; 0x69a <DIO_DISABLE_PULLUP+0x198>
		break;
	case DIO_PORTB:
		if(CHK_BIT(DDRB_REG,pin)==0)
 5aa:	e7 e3       	ldi	r30, 0x37	; 55
 5ac:	f0 e0       	ldi	r31, 0x00	; 0
 5ae:	80 81       	ld	r24, Z
 5b0:	28 2f       	mov	r18, r24
 5b2:	30 e0       	ldi	r19, 0x00	; 0
 5b4:	8a 81       	ldd	r24, Y+2	; 0x02
 5b6:	88 2f       	mov	r24, r24
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	a9 01       	movw	r20, r18
 5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <DIO_DISABLE_PULLUP+0xc0>
 5be:	55 95       	asr	r21
 5c0:	47 95       	ror	r20
 5c2:	8a 95       	dec	r24
 5c4:	e2 f7       	brpl	.-8      	; 0x5be <DIO_DISABLE_PULLUP+0xbc>
 5c6:	ca 01       	movw	r24, r20
 5c8:	81 70       	andi	r24, 0x01	; 1
 5ca:	90 70       	andi	r25, 0x00	; 0
 5cc:	00 97       	sbiw	r24, 0x00	; 0
 5ce:	09 f0       	breq	.+2      	; 0x5d2 <DIO_DISABLE_PULLUP+0xd0>
 5d0:	64 c0       	rjmp	.+200    	; 0x69a <DIO_DISABLE_PULLUP+0x198>
			CLR_BIT(PORTB_REG,pin);
 5d2:	a8 e3       	ldi	r26, 0x38	; 56
 5d4:	b0 e0       	ldi	r27, 0x00	; 0
 5d6:	e8 e3       	ldi	r30, 0x38	; 56
 5d8:	f0 e0       	ldi	r31, 0x00	; 0
 5da:	80 81       	ld	r24, Z
 5dc:	48 2f       	mov	r20, r24
 5de:	8a 81       	ldd	r24, Y+2	; 0x02
 5e0:	28 2f       	mov	r18, r24
 5e2:	30 e0       	ldi	r19, 0x00	; 0
 5e4:	81 e0       	ldi	r24, 0x01	; 1
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	02 2e       	mov	r0, r18
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <DIO_DISABLE_PULLUP+0xee>
 5ec:	88 0f       	add	r24, r24
 5ee:	99 1f       	adc	r25, r25
 5f0:	0a 94       	dec	r0
 5f2:	e2 f7       	brpl	.-8      	; 0x5ec <DIO_DISABLE_PULLUP+0xea>
 5f4:	80 95       	com	r24
 5f6:	84 23       	and	r24, r20
 5f8:	8c 93       	st	X, r24
 5fa:	4f c0       	rjmp	.+158    	; 0x69a <DIO_DISABLE_PULLUP+0x198>
		break;
	case DIO_PORTC:
		if(CHK_BIT(DDRC_REG,pin)==0)
 5fc:	e4 e3       	ldi	r30, 0x34	; 52
 5fe:	f0 e0       	ldi	r31, 0x00	; 0
 600:	80 81       	ld	r24, Z
 602:	28 2f       	mov	r18, r24
 604:	30 e0       	ldi	r19, 0x00	; 0
 606:	8a 81       	ldd	r24, Y+2	; 0x02
 608:	88 2f       	mov	r24, r24
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	a9 01       	movw	r20, r18
 60e:	02 c0       	rjmp	.+4      	; 0x614 <DIO_DISABLE_PULLUP+0x112>
 610:	55 95       	asr	r21
 612:	47 95       	ror	r20
 614:	8a 95       	dec	r24
 616:	e2 f7       	brpl	.-8      	; 0x610 <DIO_DISABLE_PULLUP+0x10e>
 618:	ca 01       	movw	r24, r20
 61a:	81 70       	andi	r24, 0x01	; 1
 61c:	90 70       	andi	r25, 0x00	; 0
 61e:	00 97       	sbiw	r24, 0x00	; 0
 620:	e1 f5       	brne	.+120    	; 0x69a <DIO_DISABLE_PULLUP+0x198>
			CLR_BIT(PORTC_REG,pin);
 622:	a5 e3       	ldi	r26, 0x35	; 53
 624:	b0 e0       	ldi	r27, 0x00	; 0
 626:	e5 e3       	ldi	r30, 0x35	; 53
 628:	f0 e0       	ldi	r31, 0x00	; 0
 62a:	80 81       	ld	r24, Z
 62c:	48 2f       	mov	r20, r24
 62e:	8a 81       	ldd	r24, Y+2	; 0x02
 630:	28 2f       	mov	r18, r24
 632:	30 e0       	ldi	r19, 0x00	; 0
 634:	81 e0       	ldi	r24, 0x01	; 1
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	02 2e       	mov	r0, r18
 63a:	02 c0       	rjmp	.+4      	; 0x640 <DIO_DISABLE_PULLUP+0x13e>
 63c:	88 0f       	add	r24, r24
 63e:	99 1f       	adc	r25, r25
 640:	0a 94       	dec	r0
 642:	e2 f7       	brpl	.-8      	; 0x63c <DIO_DISABLE_PULLUP+0x13a>
 644:	80 95       	com	r24
 646:	84 23       	and	r24, r20
 648:	8c 93       	st	X, r24
 64a:	27 c0       	rjmp	.+78     	; 0x69a <DIO_DISABLE_PULLUP+0x198>
		break;
	case DIO_PORTD:
		if(CHK_BIT(DDRD_REG,pin)==0)
 64c:	e1 e3       	ldi	r30, 0x31	; 49
 64e:	f0 e0       	ldi	r31, 0x00	; 0
 650:	80 81       	ld	r24, Z
 652:	28 2f       	mov	r18, r24
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	8a 81       	ldd	r24, Y+2	; 0x02
 658:	88 2f       	mov	r24, r24
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	a9 01       	movw	r20, r18
 65e:	02 c0       	rjmp	.+4      	; 0x664 <DIO_DISABLE_PULLUP+0x162>
 660:	55 95       	asr	r21
 662:	47 95       	ror	r20
 664:	8a 95       	dec	r24
 666:	e2 f7       	brpl	.-8      	; 0x660 <DIO_DISABLE_PULLUP+0x15e>
 668:	ca 01       	movw	r24, r20
 66a:	81 70       	andi	r24, 0x01	; 1
 66c:	90 70       	andi	r25, 0x00	; 0
 66e:	00 97       	sbiw	r24, 0x00	; 0
 670:	a1 f4       	brne	.+40     	; 0x69a <DIO_DISABLE_PULLUP+0x198>
			CLR_BIT(PORTD_REG,pin);
 672:	a2 e3       	ldi	r26, 0x32	; 50
 674:	b0 e0       	ldi	r27, 0x00	; 0
 676:	e2 e3       	ldi	r30, 0x32	; 50
 678:	f0 e0       	ldi	r31, 0x00	; 0
 67a:	80 81       	ld	r24, Z
 67c:	48 2f       	mov	r20, r24
 67e:	8a 81       	ldd	r24, Y+2	; 0x02
 680:	28 2f       	mov	r18, r24
 682:	30 e0       	ldi	r19, 0x00	; 0
 684:	81 e0       	ldi	r24, 0x01	; 1
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	02 2e       	mov	r0, r18
 68a:	02 c0       	rjmp	.+4      	; 0x690 <DIO_DISABLE_PULLUP+0x18e>
 68c:	88 0f       	add	r24, r24
 68e:	99 1f       	adc	r25, r25
 690:	0a 94       	dec	r0
 692:	e2 f7       	brpl	.-8      	; 0x68c <DIO_DISABLE_PULLUP+0x18a>
 694:	80 95       	com	r24
 696:	84 23       	and	r24, r20
 698:	8c 93       	st	X, r24
		break;
	}
}
 69a:	0f 90       	pop	r0
 69c:	0f 90       	pop	r0
 69e:	0f 90       	pop	r0
 6a0:	0f 90       	pop	r0
 6a2:	cf 91       	pop	r28
 6a4:	df 91       	pop	r29
 6a6:	08 95       	ret

000006a8 <DIO_READ_LEVEL>:
//--------------------------------------------------------------------------------------------------
Logic_Level DIO_READ_LEVEL(Port_ID port,Pin_ID pin){  //to read pin level if Pin configured as an input
 6a8:	df 93       	push	r29
 6aa:	cf 93       	push	r28
 6ac:	00 d0       	rcall	.+0      	; 0x6ae <DIO_READ_LEVEL+0x6>
 6ae:	00 d0       	rcall	.+0      	; 0x6b0 <DIO_READ_LEVEL+0x8>
 6b0:	0f 92       	push	r0
 6b2:	cd b7       	in	r28, 0x3d	; 61
 6b4:	de b7       	in	r29, 0x3e	; 62
 6b6:	89 83       	std	Y+1, r24	; 0x01
 6b8:	6a 83       	std	Y+2, r22	; 0x02

	switch (port){
 6ba:	89 81       	ldd	r24, Y+1	; 0x01
 6bc:	28 2f       	mov	r18, r24
 6be:	30 e0       	ldi	r19, 0x00	; 0
 6c0:	3d 83       	std	Y+5, r19	; 0x05
 6c2:	2c 83       	std	Y+4, r18	; 0x04
 6c4:	4c 81       	ldd	r20, Y+4	; 0x04
 6c6:	5d 81       	ldd	r21, Y+5	; 0x05
 6c8:	41 30       	cpi	r20, 0x01	; 1
 6ca:	51 05       	cpc	r21, r1
 6cc:	49 f1       	breq	.+82     	; 0x720 <DIO_READ_LEVEL+0x78>
 6ce:	8c 81       	ldd	r24, Y+4	; 0x04
 6d0:	9d 81       	ldd	r25, Y+5	; 0x05
 6d2:	82 30       	cpi	r24, 0x02	; 2
 6d4:	91 05       	cpc	r25, r1
 6d6:	34 f4       	brge	.+12     	; 0x6e4 <DIO_READ_LEVEL+0x3c>
 6d8:	2c 81       	ldd	r18, Y+4	; 0x04
 6da:	3d 81       	ldd	r19, Y+5	; 0x05
 6dc:	21 15       	cp	r18, r1
 6de:	31 05       	cpc	r19, r1
 6e0:	61 f0       	breq	.+24     	; 0x6fa <DIO_READ_LEVEL+0x52>
 6e2:	57 c0       	rjmp	.+174    	; 0x792 <DIO_READ_LEVEL+0xea>
 6e4:	4c 81       	ldd	r20, Y+4	; 0x04
 6e6:	5d 81       	ldd	r21, Y+5	; 0x05
 6e8:	42 30       	cpi	r20, 0x02	; 2
 6ea:	51 05       	cpc	r21, r1
 6ec:	61 f1       	breq	.+88     	; 0x746 <DIO_READ_LEVEL+0x9e>
 6ee:	8c 81       	ldd	r24, Y+4	; 0x04
 6f0:	9d 81       	ldd	r25, Y+5	; 0x05
 6f2:	83 30       	cpi	r24, 0x03	; 3
 6f4:	91 05       	cpc	r25, r1
 6f6:	d1 f1       	breq	.+116    	; 0x76c <DIO_READ_LEVEL+0xc4>
 6f8:	4c c0       	rjmp	.+152    	; 0x792 <DIO_READ_LEVEL+0xea>
	case DIO_PORTA:
		return CHK_BIT(PINA_REG,pin);
 6fa:	e9 e3       	ldi	r30, 0x39	; 57
 6fc:	f0 e0       	ldi	r31, 0x00	; 0
 6fe:	80 81       	ld	r24, Z
 700:	28 2f       	mov	r18, r24
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	8a 81       	ldd	r24, Y+2	; 0x02
 706:	88 2f       	mov	r24, r24
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	a9 01       	movw	r20, r18
 70c:	02 c0       	rjmp	.+4      	; 0x712 <DIO_READ_LEVEL+0x6a>
 70e:	55 95       	asr	r21
 710:	47 95       	ror	r20
 712:	8a 95       	dec	r24
 714:	e2 f7       	brpl	.-8      	; 0x70e <DIO_READ_LEVEL+0x66>
 716:	ca 01       	movw	r24, r20
 718:	58 2f       	mov	r21, r24
 71a:	51 70       	andi	r21, 0x01	; 1
 71c:	5b 83       	std	Y+3, r21	; 0x03
 71e:	3a c0       	rjmp	.+116    	; 0x794 <DIO_READ_LEVEL+0xec>
		break;
	case DIO_PORTB:
		return CHK_BIT(PINB_REG,pin);
 720:	e6 e3       	ldi	r30, 0x36	; 54
 722:	f0 e0       	ldi	r31, 0x00	; 0
 724:	80 81       	ld	r24, Z
 726:	28 2f       	mov	r18, r24
 728:	30 e0       	ldi	r19, 0x00	; 0
 72a:	8a 81       	ldd	r24, Y+2	; 0x02
 72c:	88 2f       	mov	r24, r24
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	a9 01       	movw	r20, r18
 732:	02 c0       	rjmp	.+4      	; 0x738 <DIO_READ_LEVEL+0x90>
 734:	55 95       	asr	r21
 736:	47 95       	ror	r20
 738:	8a 95       	dec	r24
 73a:	e2 f7       	brpl	.-8      	; 0x734 <DIO_READ_LEVEL+0x8c>
 73c:	ca 01       	movw	r24, r20
 73e:	58 2f       	mov	r21, r24
 740:	51 70       	andi	r21, 0x01	; 1
 742:	5b 83       	std	Y+3, r21	; 0x03
 744:	27 c0       	rjmp	.+78     	; 0x794 <DIO_READ_LEVEL+0xec>
		break;
	case DIO_PORTC:
		return CHK_BIT(PINC_REG,pin);
 746:	e3 e3       	ldi	r30, 0x33	; 51
 748:	f0 e0       	ldi	r31, 0x00	; 0
 74a:	80 81       	ld	r24, Z
 74c:	28 2f       	mov	r18, r24
 74e:	30 e0       	ldi	r19, 0x00	; 0
 750:	8a 81       	ldd	r24, Y+2	; 0x02
 752:	88 2f       	mov	r24, r24
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	a9 01       	movw	r20, r18
 758:	02 c0       	rjmp	.+4      	; 0x75e <DIO_READ_LEVEL+0xb6>
 75a:	55 95       	asr	r21
 75c:	47 95       	ror	r20
 75e:	8a 95       	dec	r24
 760:	e2 f7       	brpl	.-8      	; 0x75a <DIO_READ_LEVEL+0xb2>
 762:	ca 01       	movw	r24, r20
 764:	58 2f       	mov	r21, r24
 766:	51 70       	andi	r21, 0x01	; 1
 768:	5b 83       	std	Y+3, r21	; 0x03
 76a:	14 c0       	rjmp	.+40     	; 0x794 <DIO_READ_LEVEL+0xec>
		break;
	case DIO_PORTD:
		return CHK_BIT(PIND_REG,pin);
 76c:	e0 e3       	ldi	r30, 0x30	; 48
 76e:	f0 e0       	ldi	r31, 0x00	; 0
 770:	80 81       	ld	r24, Z
 772:	28 2f       	mov	r18, r24
 774:	30 e0       	ldi	r19, 0x00	; 0
 776:	8a 81       	ldd	r24, Y+2	; 0x02
 778:	88 2f       	mov	r24, r24
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	a9 01       	movw	r20, r18
 77e:	02 c0       	rjmp	.+4      	; 0x784 <DIO_READ_LEVEL+0xdc>
 780:	55 95       	asr	r21
 782:	47 95       	ror	r20
 784:	8a 95       	dec	r24
 786:	e2 f7       	brpl	.-8      	; 0x780 <DIO_READ_LEVEL+0xd8>
 788:	ca 01       	movw	r24, r20
 78a:	58 2f       	mov	r21, r24
 78c:	51 70       	andi	r21, 0x01	; 1
 78e:	5b 83       	std	Y+3, r21	; 0x03
 790:	01 c0       	rjmp	.+2      	; 0x794 <DIO_READ_LEVEL+0xec>
		break;
	}
	return 0;
 792:	1b 82       	std	Y+3, r1	; 0x03
 794:	8b 81       	ldd	r24, Y+3	; 0x03
}
 796:	0f 90       	pop	r0
 798:	0f 90       	pop	r0
 79a:	0f 90       	pop	r0
 79c:	0f 90       	pop	r0
 79e:	0f 90       	pop	r0
 7a0:	cf 91       	pop	r28
 7a2:	df 91       	pop	r29
 7a4:	08 95       	ret

000007a6 <DIO_WRITE_STATUS>:
//--------------------------------------------------------------------------------------------------
void DIO_WRITE_STATUS(Port_ID port,Pin_ID pin,Pin_Status direction){  //to write pin direction
 7a6:	df 93       	push	r29
 7a8:	cf 93       	push	r28
 7aa:	00 d0       	rcall	.+0      	; 0x7ac <DIO_WRITE_STATUS+0x6>
 7ac:	00 d0       	rcall	.+0      	; 0x7ae <DIO_WRITE_STATUS+0x8>
 7ae:	0f 92       	push	r0
 7b0:	cd b7       	in	r28, 0x3d	; 61
 7b2:	de b7       	in	r29, 0x3e	; 62
 7b4:	89 83       	std	Y+1, r24	; 0x01
 7b6:	6a 83       	std	Y+2, r22	; 0x02
 7b8:	4b 83       	std	Y+3, r20	; 0x03
	switch (port){
 7ba:	89 81       	ldd	r24, Y+1	; 0x01
 7bc:	28 2f       	mov	r18, r24
 7be:	30 e0       	ldi	r19, 0x00	; 0
 7c0:	3d 83       	std	Y+5, r19	; 0x05
 7c2:	2c 83       	std	Y+4, r18	; 0x04
 7c4:	8c 81       	ldd	r24, Y+4	; 0x04
 7c6:	9d 81       	ldd	r25, Y+5	; 0x05
 7c8:	81 30       	cpi	r24, 0x01	; 1
 7ca:	91 05       	cpc	r25, r1
 7cc:	09 f4       	brne	.+2      	; 0x7d0 <DIO_WRITE_STATUS+0x2a>
 7ce:	43 c0       	rjmp	.+134    	; 0x856 <DIO_WRITE_STATUS+0xb0>
 7d0:	2c 81       	ldd	r18, Y+4	; 0x04
 7d2:	3d 81       	ldd	r19, Y+5	; 0x05
 7d4:	22 30       	cpi	r18, 0x02	; 2
 7d6:	31 05       	cpc	r19, r1
 7d8:	2c f4       	brge	.+10     	; 0x7e4 <DIO_WRITE_STATUS+0x3e>
 7da:	8c 81       	ldd	r24, Y+4	; 0x04
 7dc:	9d 81       	ldd	r25, Y+5	; 0x05
 7de:	00 97       	sbiw	r24, 0x00	; 0
 7e0:	71 f0       	breq	.+28     	; 0x7fe <DIO_WRITE_STATUS+0x58>
 7e2:	bc c0       	rjmp	.+376    	; 0x95c <DIO_WRITE_STATUS+0x1b6>
 7e4:	2c 81       	ldd	r18, Y+4	; 0x04
 7e6:	3d 81       	ldd	r19, Y+5	; 0x05
 7e8:	22 30       	cpi	r18, 0x02	; 2
 7ea:	31 05       	cpc	r19, r1
 7ec:	09 f4       	brne	.+2      	; 0x7f0 <DIO_WRITE_STATUS+0x4a>
 7ee:	5f c0       	rjmp	.+190    	; 0x8ae <DIO_WRITE_STATUS+0x108>
 7f0:	8c 81       	ldd	r24, Y+4	; 0x04
 7f2:	9d 81       	ldd	r25, Y+5	; 0x05
 7f4:	83 30       	cpi	r24, 0x03	; 3
 7f6:	91 05       	cpc	r25, r1
 7f8:	09 f4       	brne	.+2      	; 0x7fc <DIO_WRITE_STATUS+0x56>
 7fa:	85 c0       	rjmp	.+266    	; 0x906 <DIO_WRITE_STATUS+0x160>
 7fc:	af c0       	rjmp	.+350    	; 0x95c <DIO_WRITE_STATUS+0x1b6>
	case DIO_PORTA:
		if (direction==OTUPUT)
 7fe:	8b 81       	ldd	r24, Y+3	; 0x03
 800:	81 30       	cpi	r24, 0x01	; 1
 802:	a1 f4       	brne	.+40     	; 0x82c <DIO_WRITE_STATUS+0x86>
			SET_BIT(DDRA_REG,pin);
 804:	aa e3       	ldi	r26, 0x3A	; 58
 806:	b0 e0       	ldi	r27, 0x00	; 0
 808:	ea e3       	ldi	r30, 0x3A	; 58
 80a:	f0 e0       	ldi	r31, 0x00	; 0
 80c:	80 81       	ld	r24, Z
 80e:	48 2f       	mov	r20, r24
 810:	8a 81       	ldd	r24, Y+2	; 0x02
 812:	28 2f       	mov	r18, r24
 814:	30 e0       	ldi	r19, 0x00	; 0
 816:	81 e0       	ldi	r24, 0x01	; 1
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	02 2e       	mov	r0, r18
 81c:	02 c0       	rjmp	.+4      	; 0x822 <DIO_WRITE_STATUS+0x7c>
 81e:	88 0f       	add	r24, r24
 820:	99 1f       	adc	r25, r25
 822:	0a 94       	dec	r0
 824:	e2 f7       	brpl	.-8      	; 0x81e <DIO_WRITE_STATUS+0x78>
 826:	84 2b       	or	r24, r20
 828:	8c 93       	st	X, r24
 82a:	98 c0       	rjmp	.+304    	; 0x95c <DIO_WRITE_STATUS+0x1b6>
		else
			CLR_BIT(DDRA_REG,pin);
 82c:	aa e3       	ldi	r26, 0x3A	; 58
 82e:	b0 e0       	ldi	r27, 0x00	; 0
 830:	ea e3       	ldi	r30, 0x3A	; 58
 832:	f0 e0       	ldi	r31, 0x00	; 0
 834:	80 81       	ld	r24, Z
 836:	48 2f       	mov	r20, r24
 838:	8a 81       	ldd	r24, Y+2	; 0x02
 83a:	28 2f       	mov	r18, r24
 83c:	30 e0       	ldi	r19, 0x00	; 0
 83e:	81 e0       	ldi	r24, 0x01	; 1
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	02 2e       	mov	r0, r18
 844:	02 c0       	rjmp	.+4      	; 0x84a <DIO_WRITE_STATUS+0xa4>
 846:	88 0f       	add	r24, r24
 848:	99 1f       	adc	r25, r25
 84a:	0a 94       	dec	r0
 84c:	e2 f7       	brpl	.-8      	; 0x846 <DIO_WRITE_STATUS+0xa0>
 84e:	80 95       	com	r24
 850:	84 23       	and	r24, r20
 852:	8c 93       	st	X, r24
 854:	83 c0       	rjmp	.+262    	; 0x95c <DIO_WRITE_STATUS+0x1b6>
		break;
	case DIO_PORTB:
		if (direction==OTUPUT)
 856:	8b 81       	ldd	r24, Y+3	; 0x03
 858:	81 30       	cpi	r24, 0x01	; 1
 85a:	a1 f4       	brne	.+40     	; 0x884 <DIO_WRITE_STATUS+0xde>
			SET_BIT(DDRB_REG,pin);
 85c:	a7 e3       	ldi	r26, 0x37	; 55
 85e:	b0 e0       	ldi	r27, 0x00	; 0
 860:	e7 e3       	ldi	r30, 0x37	; 55
 862:	f0 e0       	ldi	r31, 0x00	; 0
 864:	80 81       	ld	r24, Z
 866:	48 2f       	mov	r20, r24
 868:	8a 81       	ldd	r24, Y+2	; 0x02
 86a:	28 2f       	mov	r18, r24
 86c:	30 e0       	ldi	r19, 0x00	; 0
 86e:	81 e0       	ldi	r24, 0x01	; 1
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	02 2e       	mov	r0, r18
 874:	02 c0       	rjmp	.+4      	; 0x87a <DIO_WRITE_STATUS+0xd4>
 876:	88 0f       	add	r24, r24
 878:	99 1f       	adc	r25, r25
 87a:	0a 94       	dec	r0
 87c:	e2 f7       	brpl	.-8      	; 0x876 <DIO_WRITE_STATUS+0xd0>
 87e:	84 2b       	or	r24, r20
 880:	8c 93       	st	X, r24
 882:	6c c0       	rjmp	.+216    	; 0x95c <DIO_WRITE_STATUS+0x1b6>
		else
			CLR_BIT(DDRB_REG,pin);
 884:	a7 e3       	ldi	r26, 0x37	; 55
 886:	b0 e0       	ldi	r27, 0x00	; 0
 888:	e7 e3       	ldi	r30, 0x37	; 55
 88a:	f0 e0       	ldi	r31, 0x00	; 0
 88c:	80 81       	ld	r24, Z
 88e:	48 2f       	mov	r20, r24
 890:	8a 81       	ldd	r24, Y+2	; 0x02
 892:	28 2f       	mov	r18, r24
 894:	30 e0       	ldi	r19, 0x00	; 0
 896:	81 e0       	ldi	r24, 0x01	; 1
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	02 2e       	mov	r0, r18
 89c:	02 c0       	rjmp	.+4      	; 0x8a2 <DIO_WRITE_STATUS+0xfc>
 89e:	88 0f       	add	r24, r24
 8a0:	99 1f       	adc	r25, r25
 8a2:	0a 94       	dec	r0
 8a4:	e2 f7       	brpl	.-8      	; 0x89e <DIO_WRITE_STATUS+0xf8>
 8a6:	80 95       	com	r24
 8a8:	84 23       	and	r24, r20
 8aa:	8c 93       	st	X, r24
 8ac:	57 c0       	rjmp	.+174    	; 0x95c <DIO_WRITE_STATUS+0x1b6>
		break;
	case DIO_PORTC:
		if (direction==OTUPUT)
 8ae:	8b 81       	ldd	r24, Y+3	; 0x03
 8b0:	81 30       	cpi	r24, 0x01	; 1
 8b2:	a1 f4       	brne	.+40     	; 0x8dc <DIO_WRITE_STATUS+0x136>
			SET_BIT(DDRC_REG,pin);
 8b4:	a4 e3       	ldi	r26, 0x34	; 52
 8b6:	b0 e0       	ldi	r27, 0x00	; 0
 8b8:	e4 e3       	ldi	r30, 0x34	; 52
 8ba:	f0 e0       	ldi	r31, 0x00	; 0
 8bc:	80 81       	ld	r24, Z
 8be:	48 2f       	mov	r20, r24
 8c0:	8a 81       	ldd	r24, Y+2	; 0x02
 8c2:	28 2f       	mov	r18, r24
 8c4:	30 e0       	ldi	r19, 0x00	; 0
 8c6:	81 e0       	ldi	r24, 0x01	; 1
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	02 2e       	mov	r0, r18
 8cc:	02 c0       	rjmp	.+4      	; 0x8d2 <DIO_WRITE_STATUS+0x12c>
 8ce:	88 0f       	add	r24, r24
 8d0:	99 1f       	adc	r25, r25
 8d2:	0a 94       	dec	r0
 8d4:	e2 f7       	brpl	.-8      	; 0x8ce <DIO_WRITE_STATUS+0x128>
 8d6:	84 2b       	or	r24, r20
 8d8:	8c 93       	st	X, r24
 8da:	40 c0       	rjmp	.+128    	; 0x95c <DIO_WRITE_STATUS+0x1b6>
		else
			CLR_BIT(DDRC_REG,pin);
 8dc:	a4 e3       	ldi	r26, 0x34	; 52
 8de:	b0 e0       	ldi	r27, 0x00	; 0
 8e0:	e4 e3       	ldi	r30, 0x34	; 52
 8e2:	f0 e0       	ldi	r31, 0x00	; 0
 8e4:	80 81       	ld	r24, Z
 8e6:	48 2f       	mov	r20, r24
 8e8:	8a 81       	ldd	r24, Y+2	; 0x02
 8ea:	28 2f       	mov	r18, r24
 8ec:	30 e0       	ldi	r19, 0x00	; 0
 8ee:	81 e0       	ldi	r24, 0x01	; 1
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	02 2e       	mov	r0, r18
 8f4:	02 c0       	rjmp	.+4      	; 0x8fa <DIO_WRITE_STATUS+0x154>
 8f6:	88 0f       	add	r24, r24
 8f8:	99 1f       	adc	r25, r25
 8fa:	0a 94       	dec	r0
 8fc:	e2 f7       	brpl	.-8      	; 0x8f6 <DIO_WRITE_STATUS+0x150>
 8fe:	80 95       	com	r24
 900:	84 23       	and	r24, r20
 902:	8c 93       	st	X, r24
 904:	2b c0       	rjmp	.+86     	; 0x95c <DIO_WRITE_STATUS+0x1b6>
		break;
	case DIO_PORTD:
		if (direction==OTUPUT)
 906:	8b 81       	ldd	r24, Y+3	; 0x03
 908:	81 30       	cpi	r24, 0x01	; 1
 90a:	a1 f4       	brne	.+40     	; 0x934 <DIO_WRITE_STATUS+0x18e>
			SET_BIT(DDRD_REG,pin);
 90c:	a1 e3       	ldi	r26, 0x31	; 49
 90e:	b0 e0       	ldi	r27, 0x00	; 0
 910:	e1 e3       	ldi	r30, 0x31	; 49
 912:	f0 e0       	ldi	r31, 0x00	; 0
 914:	80 81       	ld	r24, Z
 916:	48 2f       	mov	r20, r24
 918:	8a 81       	ldd	r24, Y+2	; 0x02
 91a:	28 2f       	mov	r18, r24
 91c:	30 e0       	ldi	r19, 0x00	; 0
 91e:	81 e0       	ldi	r24, 0x01	; 1
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	02 2e       	mov	r0, r18
 924:	02 c0       	rjmp	.+4      	; 0x92a <DIO_WRITE_STATUS+0x184>
 926:	88 0f       	add	r24, r24
 928:	99 1f       	adc	r25, r25
 92a:	0a 94       	dec	r0
 92c:	e2 f7       	brpl	.-8      	; 0x926 <DIO_WRITE_STATUS+0x180>
 92e:	84 2b       	or	r24, r20
 930:	8c 93       	st	X, r24
 932:	14 c0       	rjmp	.+40     	; 0x95c <DIO_WRITE_STATUS+0x1b6>
		else
			CLR_BIT(DDRD_REG,pin);
 934:	a1 e3       	ldi	r26, 0x31	; 49
 936:	b0 e0       	ldi	r27, 0x00	; 0
 938:	e1 e3       	ldi	r30, 0x31	; 49
 93a:	f0 e0       	ldi	r31, 0x00	; 0
 93c:	80 81       	ld	r24, Z
 93e:	48 2f       	mov	r20, r24
 940:	8a 81       	ldd	r24, Y+2	; 0x02
 942:	28 2f       	mov	r18, r24
 944:	30 e0       	ldi	r19, 0x00	; 0
 946:	81 e0       	ldi	r24, 0x01	; 1
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	02 2e       	mov	r0, r18
 94c:	02 c0       	rjmp	.+4      	; 0x952 <DIO_WRITE_STATUS+0x1ac>
 94e:	88 0f       	add	r24, r24
 950:	99 1f       	adc	r25, r25
 952:	0a 94       	dec	r0
 954:	e2 f7       	brpl	.-8      	; 0x94e <DIO_WRITE_STATUS+0x1a8>
 956:	80 95       	com	r24
 958:	84 23       	and	r24, r20
 95a:	8c 93       	st	X, r24
		break;
	}
}
 95c:	0f 90       	pop	r0
 95e:	0f 90       	pop	r0
 960:	0f 90       	pop	r0
 962:	0f 90       	pop	r0
 964:	0f 90       	pop	r0
 966:	cf 91       	pop	r28
 968:	df 91       	pop	r29
 96a:	08 95       	ret

0000096c <main>:
#include "MCAL.h"
#include "HAL.h"
#include "Lib.h"


int main (){
 96c:	df 93       	push	r29
 96e:	cf 93       	push	r28
 970:	cd b7       	in	r28, 0x3d	; 61
 972:	de b7       	in	r29, 0x3e	; 62
 974:	ff cf       	rjmp	.-2      	; 0x974 <main+0x8>

00000976 <_exit>:
 976:	f8 94       	cli

00000978 <__stop_program>:
 978:	ff cf       	rjmp	.-2      	; 0x978 <__stop_program>
